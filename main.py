import asyncio

import datetime, requests

from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import CommandStart, Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery

from info import open_weather_token, bot_token_api

dp = Dispatcher()

main_keyboard = InlineKeyboardMarkup(inline_keyboard = [[InlineKeyboardButton(text = '–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', callback_data = 'setlocationkb')]])

@dp.message(CommandStart())
async def get_started(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name} ü§ñ\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥, –∞ —è –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞')

@dp.message(Command('setlocation'))
async def set_location_command(message: types.Message):
    await message.answer('–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥')

@dp.callback_query(F.data == 'setlocationkb')
async def set_location(callback: CallbackQuery):
    await callback.answer(show_alert = True)
    await callback.message.edit_text('–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥')

@dp.message()
async def get_weather(message: types.Message):
    code_to_smile = {
        'clear sky': '–Ø—Å–Ω–æ ‚òÄÔ∏è',
        'scattered clouds': '–û–±–ª–∞—á–Ω–æ ‚òÅÔ∏è',
        'overcast clouds': '–ü–∞—Å–º—É—Ä–Ω–æ ‚òÅÔ∏è',
        'shower rain': '–¥–æ–∂–¥—å üåß',
        'drizzle': '–°–ª–∞–±—ã–π –¥–æ–∂–¥—å üíß',
        'mist': '–¢—É–º–∞–Ω üå´',
        'fog': '–¢—É–º–∞–Ω üå´',
        'tornado': '–¢–æ—Ä–Ω–∞–¥–æ üå™',
        'thunderstorm': '–ì—Ä–æ–∑–∞ üå©',
        'thunderstorm with rain': '–î–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà',
        'Snow': '–°–Ω–µ–≥ ‚ùÑÔ∏è',
        'Sleet': '–°–ª—è–∫–æ—Ç—å üå®üíß',
        'Rain and snow': '–î–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üå®üíß',
        'volcano ash': '–í—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏–π –ø–µ–ø–µ–ª üåãüå´',
        } 
    try:
        res = requests.get(f"http://api.openweathermap.org/data/2.5/weather?q={message.text}&lang=ru&appid={open_weather_token}&units=metric")
        data = res.json()

        city = data["name"]
        weather_description = data['weather'][0]['description']

        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = weather_description
            
        temp = data['main']['temp']
        temp_max = data['main']['temp_max']
        temp_min = data['main']['temp_min']
        feels_like = data['main']['feels_like']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind_speed = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        length_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(data["sys"]["sunrise"])

        if wd == '–æ–±–ª–∞—á–Ω–æ' or wd == '–ø–∞—Å–º—É—Ä–Ω–æ':
            day_wish = '–ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è –æ–±–º–∞–Ω—á–∏–≤–∞, —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Ö–æ–ª–æ–¥–Ω–æ. –°—Ç–æ–∏—Ç –≤—ã–±—Ä–∞—Ç—å –≤–µ—Ä—Ö–Ω—é—é –æ–¥–µ–∂–¥—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø—Ä–æ–º–æ–∫–Ω–µ—Ç. –í–æ–∑–º–æ–∂–Ω—ã –æ—Å–∞–¥–∫–∏ ‚òîÔ∏è'
        elif wd == '–≥—Ä–æ–∑–∞' or wd == '–°–ª—è–∫–æ—Ç—å' or wd == '–Ω–µ–±–æ–ª—å—à–∞—è –≥—Ä–æ–∑–∞' or wd == '—Å–∏–ª—å–Ω–∞—è –≥—Ä–æ–∑–∞' or wd == '–º–æ–∫—Ä—ã–π —Å–Ω–µ–≥':
            day_wish = '–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ, –Ω–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å! –£ –ø—Ä–∏—Ä–æ–¥—ã –Ω–µ—Ç –ø–ª–æ—Ö–æ–π –ø–æ–≥–æ–¥—ã üå§ –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∑–æ–Ω—Ç ‚òÇÔ∏è'
        elif wd == '–¥–æ–∂–¥—å' or wd == '—Å–∏–ª—å–Ω—ã–π –ª–∏–≤–µ–Ω—å —Å –º–æ—Ä–æ—Å—å—é' or wd == '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å' or wd == '—É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å' or wd == '–ª–∏–≤–µ–Ω—å' or wd == '—Å–∏–ª—å–Ω—ã–π –ª–∏–≤–µ–Ω—å' :
            day_wish = '–û–∂–∏–¥–∞—é—Ç—Å—è –æ—Å–∞–¥–∫–∏, –∞ –∑–Ω–∞—á–∏—Ç –Ω–∞ —É–ª–∏—Ü–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ—Ö–æ–ª–æ–¥–∞–µ—Ç. –ü–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –Ω–∞–¥–µ–Ω—å—Ç–µ –∫—É—Ä—Ç–∫—É –∏–ª–∏ –ø–ª–∞—â, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞—Ö–≤–∞—Ç–∏—Ç—å —Å —Å–æ–±–æ–π –∑–æ–Ω—Ç.'
        elif wd == '–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or wd == '–¥–æ–∂–¥—å –∏ —Å–Ω–µ–≥' or wd == '—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å' or wd == '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º' or wd == '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å –∏ —Å–Ω–µ–≥':
            day_wish = '–û–∂–∏–¥–∞—é—Ç—Å—è –æ—Å–∞–¥–∫–∏, –∞ –∑–Ω–∞—á–∏—Ç –Ω–∞ —É–ª–∏—Ü–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ—Ö–æ–ª–æ–¥–∞–µ—Ç. –ü–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –Ω–∞–¥–µ–Ω—å—Ç–µ –∫—É—Ä—Ç–∫—É –∏–ª–∏ –ø–ª–∞—â, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞—Ö–≤–∞—Ç–∏—Ç—å —Å —Å–æ–±–æ–π –∑–æ–Ω—Ç.'
        elif wd == '–º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å' or wd == '—Å–ª–∞–±—ã–π –º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å'  or wd == '—Å–∏–ª—å–Ω—ã–π –º–æ—Ä–æ—Å—è—â–∏–π –¥–æ–∂–¥—å'  or wd == '–º–µ–ª–∫–∏–π –¥–æ–∂–¥—å' or wd == '–ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å':
            day_wish = '–î–µ–Ω—å –±—É–¥–µ—Ç –ø—Ä–æ—Ö–ª–∞–¥–Ω—ã–º –∏ —Å –æ—Å–∞–¥–∫–∞–º–∏. –î–æ–∂–¥—å –Ω–µ—Å–∏–ª—å–Ω—ã–π, –Ω–æ –≤—ã—Ö–æ–¥—è –∏–∑ –¥–æ–º–∞, –±–µ—Ä–∏—Ç–µ —Å —Å–æ–±–æ–π –∑–æ–Ω—Ç ‚òÇÔ∏è'
        elif wd == '–°–Ω–µ–≥' or wd == '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥' or wd == '—Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥–æ–ø–∞–¥':
            day_wish = '–ú–æ—Ä–æ–∑–Ω—ã–π –¥–µ–Ω—å, –Ω–∞ —É–ª–∏—Ü–∞—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫–æ–ª—å–∑–∫–æ, –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö! –ù–∞ –≤—ã—Ö–æ–¥ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω—É—é –æ–¥–µ–∂–¥—É. –ê –µ—Å–ª–∏ –ø–æ–≤–µ–∑–ª–æ –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ–º–∞, –ª—É—á—à–µ —Å–æ–≥—Ä–µ–≤–∞—Ç—å—Å—è –∑–∞ –ª—é–±–∏–º—ã–º –∑–∞–Ω—è—Ç–∏–µ–º –∏–ª–∏ —Å —á–∞—à–∫–æ–π –∞—Ä–æ–º–∞—Ç–Ω–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞.'
        elif wd == '—Ç—É–º–∞–Ω':
            day_wish = '–°–µ–≥–æ–¥–Ω—è –æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç—É–º–∞–Ω, –∞ –∑–Ω–∞—á–∏—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å –±—É–¥–µ—Ç —Å–Ω–∏–∂–∞—Ç—å—Å—è. –ë—É–¥—å—Ç–µ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã –Ω–∞ –¥–æ—Ä–æ–≥–µ! –¢–∞–∫ –∂–µ –≤—ã—Ö–æ–¥—è –Ω–∞ –ø—Ä–æ–≥—É–ª–∫—É –≤–æ–∑—å–º–∏—Ç–µ –∫—É—Ä—Ç–∫—É, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ö–æ–ª–æ–¥–∞–Ω–∏–µ.'
        elif wd == '—á–∏—Å—Ç–æ–µ –Ω–µ–±–æ' or wd == '—è—Å–Ω–æ':
            day_wish = '–ü–æ–≥–æ–¥–∞ –∑–∞–º–∞–Ω–∏–≤–∞–µ—Ç –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ, –Ω–µ –æ—Ç–∫–∞–∑—ã–≤–∞–π—Ç–µ—Å—å! –û—Å–∞–¥–∫–æ–≤ –Ω–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è, –≤ —Ç—ë–ø–ª—É—é –ø–æ–≥–æ–¥—É –º–æ–∂–Ω–æ –Ω–∞–¥–µ—Ç—å —Å–≤–æ–±–æ–¥–Ω—É—é –æ–¥–µ–∂–¥—É –∏ –ª—é–±–∏–º—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏'
    
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} üëã\n'
                            f'‚õÖÔ∏è –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}\n'
                            f"‚ñ´Ô∏è–°–µ–≥–æ–¥–Ω—è, {datetime.datetime.now().strftime('%d.%m - %H:%M')}‚ñ´Ô∏è\n"
                            f'\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å: {temp}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C, ‚òÅÔ∏è {wd}\n'
                            f'‚Üë–ú–∞–∫—Å {temp_max}¬∞C - ‚Üì–ú–∏–Ω {temp_min}¬∞C\n'
                            f'\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\nüèß–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º —Ä—Ç. —Å—Ç.\nüí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n'
                            f'\nüåá–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\nüåÜ–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n'
                            f'‚òÄÔ∏è–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day}\n'
                            f'\nüí≠ –°–æ–≤–µ—Ç:\n{day_wish}', reply_markup = main_keyboard)
    except:
        await message.answer(f'–ù–µ —Å–º–æ–≥ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ {message.text}...–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥!')
        
async def main():
    bot = Bot(bot_token_api)
    await dp.start_polling(bot)

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('Exit')